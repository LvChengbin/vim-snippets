# jasmine

# new Ynn 
snippet ~ynn "new Ynn()"
new Ynn( {
	${1:root : __dirname}
} );
endsnippet

# Ynn Initialize
snippet ~y.i
#!/usr/bin/env node

const Ynn = require( 'ynn' );
const app = new Ynn( {
	root : __dirname${0:${VISUAL}}
} );
require.main === module && app.listen( Ynn.cargs.port );
module.exports = app;
endsnippet

# ynn controller
snippet ~y.c "class extends Ynn.Controller {};"
class${1: }extends ${2:require( 'ynn' )}.Controller {
	${0:${VISUAL}}
}
endsnippet

# ynn module
snippet ~y.m "class extends Ynn.Module {};"
class${1: }extends ${2:require( 'ynn' )}.Module {
	${0:${VISUAL}}
}
endsnippet

# ynn service
snippet ~y.s "class extends Ynn.Service {};"
class${1: }extends ${2:require( 'ynn' )}.Service {
	${0:${VISUAL}}
}
endsnippet

# ynn action
snippet ~y.a "indexAction() {}"
${1:index}Action() {
	${0:${VISUAL}}
}
endsnippet

# ynn action
snippet ~y.aa "async indexAction() {}"
async ${1:index}Action() {
	${0:${VISUAL}}
}
endsnippet

# ynn console

# this.console.log
snippet ~y.cl "this.console.log( 'abc' );"
this.console.log( ${1} );
endsnippet

# this.console.warn
snippet ~y.cw "this.console.warn( 'abc' );"
this.console.warn( ${1} );
endsnippet

# this.console.debug
snippet ~y.cd "this.console.debug( 'abc' );"
this.console.debug( ${1} );
endsnippet

# this.console.error
snippet ~y.ce "this.console.error( 'abc' );"
this.console.error( ${1} );
endsnippet

# this.console.info
snippet ~y.ci "this.console.info( 'abc' );"
this.console.info( ${1} );
endsnippet

# ynn logger

# this.logger.log
snippet "~y.ll?" "this.logger.log( 'abc' );" r
this.logger.log( ${1}, ${2:\{\}} );
endsnippet

# this.logger.error
snippet ~y.le "this.logger.error( 'abc' );"
this.logger.error( ${1}, ${2:\{\}} );
endsnippet

# this.logger.warn
snippet ~y.lw "this.logger.warn( 'abc' );"
this.logger.warn( ${1}, ${2:\{\}} );
endsnippet

# this.logger.info
snippet ~y.li "this.logger.info( 'abc' );"
this.logger.info( ${1}, ${2:\{\}} );
endsnippet

# __ynn__.server
snippet ~y._s "__ynn__.server" i
__ynn__.server
endsnippet

# ${__ynn__.server}
snippet ~y.$_s "${__ynn__.server}" i
${__ynn__.server}
endsnippet
